// -------------------------------------------------------------------------
// <Auto-generated file - do not modify!>
//
// This code was generated automatically by Kinvey Studio.
//
// Changes to this file may cause undesired behavior and will be lost
// the next time the code regenerates.
//
// Find more information on https://devcenter.kinvey.com/guides/studio-extension-points.
// -------------------------------------------------------------------------
import { AbstractControl, ValidationErrors, ValidatorFn, FormGroup } from '@angular/forms';

export class CustomValidators {
    public static urlFormat(control: AbstractControl): ValidationErrors {
        const URL_REGEXP: RegExp = /((([A-Za-z]{3,9}:(?:\/\/)?)(?:[-;:&=\+\$,\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\+\$,\w]+@)[A-Za-z0-9.-]+)((?:\/[\+~%\/.\w-_]*)?\??(?:[-\+=&;%@.\w_]*)#?(?:[\w]*))?)/i; /* tslint:disable-line */

        if (control.value !== '' && !URL_REGEXP.test(control.value)) {
            return {
                'invalidUrl': true
            };
        }

        return null;
    }

    public static mustMatch(controlName: string, matchingControlName: string): ValidatorFn {
        return (formGroup: FormGroup): ValidationErrors => {
            const control = formGroup.controls[controlName];
            const matchingControl = formGroup.controls[matchingControlName];

            if (matchingControl.errors && !matchingControl.errors.mustMatch) {
                return;
            }

            if (control.value !== matchingControl.value) {
                matchingControl.setErrors({ mustMatch: true });
                return;
            }

            matchingControl.setErrors(null);
        };
    }

    public static noWhitespaceValidator(control: AbstractControl): ValidationErrors {
        return (control.value || '').trim().length === 0 ? { 'required': true } : null;
    }
}
