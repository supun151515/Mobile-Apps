// -------------------------------------------------------------------------
// <Auto-generated file - do not modify!>
//
// This code was generated automatically by Kinvey Studio.
//
// Changes to this file may cause undesired behavior and will be lost
// the next time the code regenerates.
//
// Find more information on https://devcenter.kinvey.com/guides/studio-extension-points.
// -------------------------------------------------------------------------
import { Input, Output, EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';

export abstract class KsInputBaseComponent implements ControlValueAccessor {
    @Input() public config: any;
    @Input() public id: string;
    @Input() value: any;

    @Output() public valueChange: any = new EventEmitter();

    private onChange: (value) => any;

    public writeValue(value: any): void {
        this.value = value;
    }

    public registerOnChange(fn: any): void {
        this.onChange = (value) => {
            fn(value);
            this.valueChange.emit(value);
        };
    }

    public registerOnTouched(): void {}

    protected updateValue(value: any) {
        this.writeValue(value);
        this.valueChange.emit(value);
        if (this.onChange) {
            this.onChange(value);
        }
    }
}
