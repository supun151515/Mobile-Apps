"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
var value_accessors_1 = require("nativescript-angular/forms/value-accessors");
var PICKER_VALUE_ACCESSOR = {
    provide: forms_1.NG_VALUE_ACCESSOR,
    useExisting: core_1.forwardRef(function () { return PickerValueAccessor; }),
    multi: true,
};
var PickerValueAccessor = (function (_super) {
    __extends(PickerValueAccessor, _super);
    function PickerValueAccessor(elementRef) {
        var _this = _super.call(this, elementRef.nativeElement) || this;
        _this._hasBeenOpened = false;
        return _this;
    }
    PickerValueAccessor.prototype.handleSelectedValueChange = function (args) {
        if (this._hasBeenOpened) {
            this.onChange(args.value);
        }
    };
    PickerValueAccessor.prototype.handlePickerOpened = function (args) {
        this._hasBeenOpened = true;
    };
    PickerValueAccessor.prototype.handlePickerClosed = function (args) {
        this.onTouched();
    };
    PickerValueAccessor.prototype.writeValue = function (value) {
        var normalized = _super.prototype.normalizeValue.call(this, value);
        this.view.selectedValue = normalized;
    };
    PickerValueAccessor = __decorate([
        core_1.Directive({
            selector: "PickerField[ngModel],PickerField[formControlName],PickerField[formControl]," +
                "pickerfield[ngModel],pickerfield[formControlName],pickerfield[formControl]," +
                "pickerField[ngModel],pickerField[formControlName],pickerField[formControl]," +
                "picker-field[ngModel],picker-field[formControlName],picker-field[formControl]",
            providers: [PICKER_VALUE_ACCESSOR],
            host: {
                "(selectedValueChange)": "handleSelectedValueChange($event)",
                "(pickerOpened)": "handlePickerOpened($event)",
                "(pickerClosed)": "handlePickerClosed($event)"
            },
        }),
        __metadata("design:paramtypes", [core_1.ElementRef])
    ], PickerValueAccessor);
    return PickerValueAccessor;
}(value_accessors_1.BaseValueAccessor));
exports.PickerValueAccessor = PickerValueAccessor;
//# sourceMappingURL=nativescript-picker.accessors.js.map